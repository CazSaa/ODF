[odg.attack_tree]
toplevel Attacker_causes_pollution;
Attacker_causes_pollution and Attack_protection_system Waterhammer_attack;
Attacker_causes_pollution objects=[Pipeline, Environment] impact=3.0;

Attack_protection_system and Understand_system_operation protection_deactivation;

Understand_system_operation prob=0.0208 objects=[SCADA_System] impact=1.0;

protection_deactivation or attack_preparation1 attack_preparation2 attack_preparation3 falsify_RTU_output;

attack_preparation1 and Access_to_Control_Center falsify_CC_instructions deactivate_reflex_action;
Access_to_Control_Center prob=0.0050 objects=[Control_Center] impact=1.0;
falsify_CC_instructions prob=0.4 objects=[Control_Center, RTU_CC_Link] impact=1.0;

deactivate_reflex_action or No_reflex_action_A jamming_com_between_RTUs;
No_reflex_action_A prob=1 objects=[RTU] cond=(!Reflex_Action_Enabled) impact=1.0;
jamming_com_between_RTUs prob=0.7 objects=[RTU_RTU_Link] impact=1.0;

attack_preparation2 and Access_via_RTU_CC_link deactivate_reflex_action send_false_instructions_to_RTUs report_false_data_to_CC;
Access_via_RTU_CC_link prob=0.0012 objects=[RTU_CC_Link] impact=1.0;
send_false_instructions_to_RTUs prob=0.4 objects=[RTU, RTU_RTU_Link] impact=1.0;
report_false_data_to_CC prob=0.4 objects=[RTU, RTU_CC_Link] impact=1.0;

attack_preparation3 and Access_via_sensors_RTU_link deactivate_reflex_action falsify_sensors_measures;
Access_via_sensors_RTU_link prob=0.0008 objects=[Sensors_RTU_Link] impact=1.0;
falsify_sensors_measures prob=0.4 objects=[Sensors, Sensors_RTU_Link] impact=1.0;

falsify_RTU_output and Access_to_RTU falsify_data_sent_to_other_RTUs falsify_data_sent_to_CC falsify_instructions_sent_to_equipments;
Access_to_RTU prob=0.0208 objects=[RTU] impact=1.0;
falsify_data_sent_to_other_RTUs prob=0.6 objects=[RTU, RTU_RTU_Link] impact=1.0;
falsify_data_sent_to_CC prob=0.6 objects=[RTU, RTU_CC_Link] impact=1.0;
falsify_instructions_sent_to_equipments prob=0.7 objects=[RTU, Equipment] impact=1.0;

Waterhammer_attack and High_pumping_pressure_activation Valve_closing;
High_pumping_pressure_activation prob=0.7 objects=[Pumps] impact=1.0;
Valve_closing prob=0.7 objects=[Valves] impact=1.0;


[odg.fault_tree]
toplevel Accidental_pollution;
Accidental_pollution and Pipeline_breaks_accidentally Protection_failure;
Accidental_pollution objects=[Pipeline, Environment] impact=3.0;

Pipeline_breaks_accidentally prob=0.0000114 objects=[Pipeline] impact=1.0;

Protection_failure or No_instructions_from_RTU Equipment_failure_to_react;
No_instructions_from_RTU or RTU_broken No_RTU_reaction;

RTU_broken prob=0.000138 objects=[RTU] impact=1.0;

No_RTU_reaction and No_reflex_action_activated_by_RTU No_instruction_from_Control_Center;

No_reflex_action_activated_by_RTU or No_reflex_action_F inter_RTU_communication_lost faulty_sensor_measure;
No_reflex_action_F prob=1 objects=[RTU] cond=(!Reflex_Action_Enabled) impact=1.0;
inter_RTU_communication_lost prob=0.0007 objects=[RTU_RTU_Link] impact=1.0;
faulty_sensor_measure prob=0.00023 impact=1.0;

No_instruction_from_Control_Center or faulty_sensor_measure CC_RTU_communication_lost Control_Center_broken faulty_operator;
CC_RTU_communication_lost prob=0.00046 objects=[RTU_CC_Link] impact=1.0;
Control_Center_broken prob=0.000114 objects=[Control_Center] impact=1.0;
faulty_operator prob=0.00023 impact=1.0;

Equipment_failure_to_react or Valves_on_demand_failure_to_close Pumps_on_demand_failure_to_stop;
Valves_on_demand_failure_to_close prob=0.00005 objects=[Valves] impact=1.0;
Pumps_on_demand_failure_to_stop prob=0.00001 objects=[Pumps] impact=1.0;


[odg.object_graph]
// Physical pipeline and components
Pipeline has Pumps Valves Sensors;

// Control system
SCADA_System has Control_Center RTU Equipment;
RTU properties=[Reflex_Action_Enabled];
Equipment has Sensors Valves Pumps; // Same equipment as in the pipeline

Environment;

// Communication links
RTU_CC_Link;
RTU_RTU_Link;
Sensors_RTU_Link;

[formulas]
// Example formula to check the probability of pollution due to attacks vs. accidents
{Pipeline_Integrity: 1, RTU_Operational: 1, CC_Operational: 1, Reflex_Action_Enabled: 1, Valves_Operational: 1, Pumps_Operational: 1, Sensors_Operational: 1, RTU_CC_Link_Operational: 1, RTU_RTU_Link_Operational: 1, Sensors_RTU_Link_Operational: 1}
P(Attacker_causes_pollution) > P(Accidental_pollution);

// Check if implementing the reflex action reduces the overall risk
{Pipeline_Integrity: 1, RTU_Operational: 1, CC_Operational: 1, Valves_Operational: 1, Pumps_Operational: 1, Sensors_Operational: 1, RTU_CC_Link_Operational: 1, RTU_RTU_Link_Operational: 1, Sensors_RTU_Link_Operational: 1}
P(Accidental_pollution) < 0.02 [Reflex_Action_Enabled: 1];

// Find the minimal scenarios that can lead to pollution
{Pipeline_Integrity: 1, RTU_Operational: 1, CC_Operational: 1, Reflex_Action_Enabled: 1, Valves_Operational: 1, Pumps_Operational: 1, Sensors_Operational: 1, RTU_CC_Link_Operational: 1, RTU_RTU_Link_Operational: 1, Sensors_RTU_Link_Operational: 1}
[[Attacker_causes_pollution || Accidental_pollution]];

// Find the most risky component in the system
MostRiskyA(RTU);
MostRiskyF(Pipeline);

// Find the optimal configuration to minimize risk
OptimalConf(Control_System);

// Calculate the maximum total risk for the pipeline
MaxTotalRisk(Pipeline);